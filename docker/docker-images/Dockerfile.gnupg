FROM amd64/ubuntu

ARG PYTHON_VERSION=3.7.7
ARG GNUPG_VER=2.2.20
ARG LIBGPG_ERROR_VER=1.36
ARG LIBGCRYPT_VER=1.8.4
ARG LIBKSBA_VER=1.3.5
ARG LIBASSUAN_VER=2.5.3
ARG NPTH_VER=1.6
ARG PINENTRY_VER=1.1.0
ARG DOWNLOAD=/tmp
ARG TZ='Europe/Stockholm'
ENV DEBIAN_FRONTEND=noninteractive

ADD ./requirements.gnupg.txt /usr/tmp/requirements.txt

RUN apt-get update \
    && apt-get -y install libgnutls28-dev \
        wget \
        bzip2 \
        make \
        gettext \
        apt-utils \
        texinfo \
        gnutls-bin \
        build-essential \
        libbz2-dev \
        zlib1g-dev \
        libncurses5-dev \
        libsqlite3-dev \
        libldap2-dev \
    && apt-get -y install libgdbm-dev \
        libnss3-dev \
        libssl-dev \
        libreadline-dev \
        zip \
        libffi-dev

RUN mkdir -p /var/src/gnupg-$GNUPG_VER && cd /var/src/gnupg-$GNUPG_VER \
    && gpg --list-keys \
    && gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 249B39D24F25E3B6 04376F3EE0856959 2071B08A33BD3F06 8A861B1C7EFD60D9


RUN cd ${DOWNLOAD}

RUN wget -c https://www.gnupg.org/ftp/gcrypt/libgpg-error/libgpg-error-$LIBGPG_ERROR_VER.tar.gz  \
    && wget -c https://www.gnupg.org/ftp/gcrypt/libgpg-error/libgpg-error-$LIBGPG_ERROR_VER.tar.gz.sig \
    && wget -c https://www.gnupg.org/ftp/gcrypt/libgcrypt/libgcrypt-$LIBGCRYPT_VER.tar.gz  \
    && wget -c https://www.gnupg.org/ftp/gcrypt/libgcrypt/libgcrypt-$LIBGCRYPT_VER.tar.gz.sig \
    && wget -c https://www.gnupg.org/ftp/gcrypt/libassuan/libassuan-$LIBASSUAN_VER.tar.bz2 \
    && wget -c https://www.gnupg.org/ftp/gcrypt/libassuan/libassuan-$LIBASSUAN_VER.tar.bz2.sig \
    && wget -c https://www.gnupg.org/ftp/gcrypt/libksba/libksba-$LIBKSBA_VER.tar.bz2 \
    && wget -c https://www.gnupg.org/ftp/gcrypt/libksba/libksba-$LIBKSBA_VER.tar.bz2.sig \
    && wget -c https://www.gnupg.org/ftp/gcrypt/npth/npth-$NPTH_VER.tar.bz2 \
    && wget -c https://www.gnupg.org/ftp/gcrypt/npth/npth-$NPTH_VER.tar.bz2.sig \
    && wget -c https://www.gnupg.org/ftp/gcrypt/pinentry/pinentry-$PINENTRY_VER.tar.bz2 \
    && wget -c https://www.gnupg.org/ftp/gcrypt/pinentry/pinentry-$PINENTRY_VER.tar.bz2.sig \
    && wget -c https://www.gnupg.org/ftp/gcrypt/gnupg/gnupg-$GNUPG_VER.tar.bz2 \
    && wget -c https://www.gnupg.org/ftp/gcrypt/gnupg/gnupg-$GNUPG_VER.tar.bz2.sig \
    && gpg --verify libgpg-error-$LIBGPG_ERROR_VER.tar.gz.sig && tar -xzf libgpg-error-$LIBGPG_ERROR_VER.tar.gz \
    && gpg --verify libgcrypt-$LIBGCRYPT_VER.tar.gz.sig && tar -xzf libgcrypt-$LIBGCRYPT_VER.tar.gz \
    && gpg --verify libassuan-$LIBASSUAN_VER.tar.bz2.sig && tar -xjf libassuan-$LIBASSUAN_VER.tar.bz2  \
    && gpg --verify libksba-$LIBKSBA_VER.tar.bz2.sig && tar -xjf libksba-$LIBKSBA_VER.tar.bz2 \
    && gpg --verify npth-$NPTH_VER.tar.bz2.sig && tar -xjf npth-$NPTH_VER.tar.bz2  \
    && gpg --verify pinentry-$PINENTRY_VER.tar.bz2.sig && tar -xjf pinentry-$PINENTRY_VER.tar.bz2 \
    && gpg --verify gnupg-$GNUPG_VER.tar.bz2.sig && tar -xjf gnupg-$GNUPG_VER.tar.bz2


RUN cd libgpg-error-$LIBGPG_ERROR_VER \
    && ./configure \
    && make && make install \
    && cd ..

RUN cd libgcrypt-$LIBGCRYPT_VER \
    && ./configure \
    && make && make install \
    && cd ..

RUN cd libassuan-$LIBASSUAN_VER \
    && ./configure \
    && make && make install \
    && cd ../

RUN cd libksba-$LIBKSBA_VER \
    && ./configure \
    && make && make install \
    && cd ..

RUN cd npth-$NPTH_VER \
    && ./configure \
    && make && make install \
    && cd ..

RUN cd pinentry-$PINENTRY_VER \
    && ./configure --enable-pinentry-curses --disable-pinentry-qt4 \
    && make && make install \
    && cd ..

RUN cd gnupg-$GNUPG_VER \
    && ./configure --prefix=/usr \
            --enable-symcryptrun  \
            --localstatedir=/var  \
            --docdir=/usr/share/doc/gnupg-$GNUPG_VER \
    && make && make install \
    && cd ..

RUN wget -c https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \
    && tar -xzf Python-${PYTHON_VERSION}.tgz  \
    &&  cd Python-${PYTHON_VERSION} \
    && ./configure --enable-optimizations \
    && make altinstall

RUN apt-get update && apt-get install -y python3-pip

RUN alias python=python3
RUN alias pip=pip3


RUN apt-get upgrade -y \
    && apt-get dist-upgrade -y \
    && apt-get autoremove -y \
    && apt-get clean -y \
    && apt-get autoclean -y \
    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && find / -maxdepth 1 -iname '*tar.*'  -delete

RUN pip install \
  --target /tmp/package \
  --requirement /usr/tmp/requirements.txt

RUN cp -r /usr/lib/gnupg /tmp/package
